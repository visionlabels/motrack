[{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://jirilukavsky.github.io/motrack/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2019 Jiri Lukavsky  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. motrack Copyright (C) 2019 Jiri Lukavsky This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://jirilukavsky.github.io/motrack/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jiri Lukavsky. Author, maintainer.","code":""},{"path":"https://jirilukavsky.github.io/motrack/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lukavsky J (2022). motrack: Tools Multiple Object Tracking experiments. R package version 0.3.0, https://jirilukavsky.github.io/motrack/.","code":"@Manual{,   title = {motrack: Tools for Multiple Object Tracking experiments},   author = {Jiri Lukavsky},   year = {2022},   note = {R package version 0.3.0},   url = {https://jirilukavsky.github.io/motrack/}, }"},{"path":"https://jirilukavsky.github.io/motrack/index.html","id":"motrack---tools-for-multiple-object-tracking","dir":"","previous_headings":"","what":"Tools for Multiple Object Tracking experiments","title":"Tools for Multiple Object Tracking experiments","text":"Multiple Object Tracking popular experimental paradigm used visual attention research. goal remember several objects keep track move (demo). package allows researcher generate object trajectories, visualize export experiments. trajectory position data tibble format easy manipulation.","code":""},{"path":"https://jirilukavsky.github.io/motrack/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Multiple Object Tracking experiments","text":"package active development. can install current version GitHub following code:","code":"# Install devtools package if necessary if(!\"devtools\" %in% rownames(installed.packages())) install.packages(\"devtools\")  # Install the stable verion from GitHub devtools::install_github(\"jirilukavsky/motrack\")"},{"path":"https://jirilukavsky.github.io/motrack/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tools for Multiple Object Tracking experiments","text":"Let us create trajectory two: ffmpeg installed, can use animation package render videos.","code":"library(motrack) #load the package  # we want objects starting  # more further from the arena border and further from each other sett_generate <-   new_settings(xlim = c(-7, 7), ylim = c(-7, 7), min_distance = 2,                arena_shape = \"circle\") # they can move in a circular arena, bounce off borders and other objects sett_move <-   new_settings(speed = 5, xlim = c(-9, 9), ylim = c(-9, 9),                bounce_off_square = F,                bounce_off_circle = T, circle_bounce_jitter = pi / 6) # here you can separately adjust settings for visualization sett_show <-   new_settings(show_labels = T)  # set seed for replicability set.seed(1001)  position <- generate_positions_random(8, sett_generate)  # our starting positions plot_position(position, sett_move)  # Make objects move for 8 seconds (0 to 8), adjust direction every 100 ms timescale <- seq(0, 8, by = 0.1)  # Objects only bounce trajectory_d <-    make_random_trajectory(position, timescale, sett_move,      step_direct)  # Object change direction randomly every 0.5-1.5 seconds trajectory_z <-    make_random_trajectory(position, timescale, sett_move,      step_zigzag, ttt = c(.5, 1.5), syncstart = F)  # Object change direction smoothly trajectory_v <-    make_random_trajectory(position, timescale, sett_move,      step_vonmises, kappa = 10)  plot_trajectory(trajectory_d, sett_show) plot_trajectory(trajectory_z, sett_show) plot_trajectory(trajectory_v, sett_show)  # It is possible to implement complex motion patterns: # Object move for 0.5-1.5 seconds or wait for 0.2-0.5 seconds.  # After movement/waiting, it waits with probability 0.1,  # otherwise it changes direction randomly trajectory_wm <-    make_random_trajectory(     position, timescale, sett_move,      step_waitandmove, move_time = c(.5, 1.5),      wait_time = c(.2,.5), wait_prob = 0.1, syncstart = F)  # It is possible to vary speed during the trial based on the custom function f1 <- function(time, moment) {   5 + cos(time + moment$object) # different offset for each object } sett_move$speed <- c(f1)  trajectory_s <-    make_random_trajectory(     position, timescale, sett_move, step_direct) animation::ani.options(ffmpeg = \"/usr/bin/ffmpeg\")   # update to your path  render_trajectory_video(\"trajectory_d.mp4\", trajectory_d,    new_settings(show_labels = T), targets = 1:4 ) render_trajectory_video(\"trajectory_z.mp4\", trajectory_z,    new_settings(show_labels = T), targets = 1:4 ) render_trajectory_video(\"trajectory_v.mp4\", trajectory_v,    new_settings(show_labels = T), targets = 1:4 )  # variable speed example render_trajectory_video(\"trajectory_s.mp4\", trajectory_s,    new_settings(show_labels = T), targets = 1:4 )"},{"path":"https://jirilukavsky.github.io/motrack/reference/add_random_direction.html","id":null,"dir":"Reference","previous_headings":"","what":"Add random direction — add_random_direction","title":"Add random direction — add_random_direction","text":"Simple fuction assign random direction object position object. Random means uniformly distributed value 0 2 * pi (0 360 deg). orientation guide using clock analogy: 0 = 3 o'clock, pi/2 = 12 o'clock, pi = 9 o'clock, 3*pi/2 = 6 o'clock","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/add_random_direction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add random direction — add_random_direction","text":"","code":"add_random_direction(position)"},{"path":"https://jirilukavsky.github.io/motrack/reference/add_random_direction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add random direction — add_random_direction","text":"position tibble","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/add_random_direction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add random direction — add_random_direction","text":"tibble extra direction column","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/add_random_direction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add random direction — add_random_direction","text":"","code":"position8c %>% add_random_direction() #> # A tibble: 8 × 4 #>   object      x      y direction #>    <int>  <dbl>  <dbl>     <dbl> #> 1      1 -1.21  -1.84      5.58  #> 2      2 -3.74  -0.477     0.476 #> 3      3 -3.28   5.01      2.90  #> 4      4 -6.36  -0.809     5.62  #> 5      5  4.18  -5.29      3.65  #> 6      6  0.853 -4.11      1.29  #> 7      7 -5.21   3.55      3.33  #> 8      8  5.53  -1.76      6.19"},{"path":"https://jirilukavsky.github.io/motrack/reference/annotate_aperture.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw bitmap image as ggplot2 annotation and cover rest with filled colour — annotate_aperture","title":"Draw bitmap image as ggplot2 annotation and cover rest with filled colour — annotate_aperture","text":"Draw bitmap image ggplot2 annotation cover rest filled colour","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/annotate_aperture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw bitmap image as ggplot2 annotation and cover rest with filled colour — annotate_aperture","text":"","code":"annotate_aperture(   image,   xlim_in,   ylim_in,   colour,   alpha = 1,   xlim_out = NULL,   ylim_out = NULL,   settings = NULL )"},{"path":"https://jirilukavsky.github.io/motrack/reference/annotate_aperture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw bitmap image as ggplot2 annotation and cover rest with filled colour — annotate_aperture","text":"image rasterGrob object filename (png) xlim_in x-coordinates image ylim_in y-coordinates image colour fill colour remaining area alpha Transparency remaining area (drawn image) xlim_out x-coordinates covered area ylim_out y-coordinates covered area settings list named parameters, default values xlim_out ylim_out can taken xlim ylim","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/annotate_aperture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw bitmap image as ggplot2 annotation and cover rest with filled colour — annotate_aperture","text":"ggplot2 layer (`ggplot2::annotate`)","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/annotate_aperture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw bitmap image as ggplot2 annotation and cover rest with filled colour — annotate_aperture","text":"","code":"image <- system.file(\"extdata/aperture_white.png\", package=\"motrack\") s <- new_settings() plot_position(position8c, s,   foreground_annotation = annotate_aperture(     image, xlim_in = c(-6, 6), ylim_in = c(-6, 6), colour = \"white\", settings = s ))"},{"path":"https://jirilukavsky.github.io/motrack/reference/annotate_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw bitmap image as ggplot2 annotation — annotate_image","title":"Draw bitmap image as ggplot2 annotation — annotate_image","text":"Draw bitmap image ggplot2 annotation","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/annotate_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw bitmap image as ggplot2 annotation — annotate_image","text":"","code":"annotate_image(image, xlim = NULL, ylim = NULL, settings = NULL)"},{"path":"https://jirilukavsky.github.io/motrack/reference/annotate_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw bitmap image as ggplot2 annotation — annotate_image","text":"image rasterGrob object filename (png) xlim x-coordinates ylim y-coordinates settings list named parameters, default values xlim ylim taken","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/annotate_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw bitmap image as ggplot2 annotation — annotate_image","text":"ggplot2 layer (`ggplot2::annotation_custom`)","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/annotate_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw bitmap image as ggplot2 annotation — annotate_image","text":"","code":"image <- system.file(\"img\", \"Rlogo.png\", package=\"png\") s <- new_settings() plot_position(position8c, s,   background_annotation = annotate_image(image, settings = s))"},{"path":"https://jirilukavsky.github.io/motrack/reference/bounce_off_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for circular arena bouncing and recalculate directions — bounce_off_circle","title":"Check for circular arena bouncing and recalculate directions — bounce_off_circle","text":"Check circular arena bouncing recalculate directions","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/bounce_off_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for circular arena bouncing and recalculate directions — bounce_off_circle","text":"","code":"bounce_off_circle(moment, time_next, settings)"},{"path":"https://jirilukavsky.github.io/motrack/reference/bounce_off_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for circular arena bouncing and recalculate directions — bounce_off_circle","text":"moment Position tibble extra columns `direction` `speed` time_next Next timepoint settings list basic properties","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/bounce_off_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for circular arena bouncing and recalculate directions — bounce_off_circle","text":"Like `moment`, directions adjusted (reversed, swapped), collision arena border next time point (`timestep`)","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/bounce_off_others.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for inter-object bouncing and recalculate directions — bounce_off_others","title":"Check for inter-object bouncing and recalculate directions — bounce_off_others","text":"Check inter-object bouncing recalculate directions","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/bounce_off_others.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for inter-object bouncing and recalculate directions — bounce_off_others","text":"","code":"bounce_off_others(moment, time_next, settings)"},{"path":"https://jirilukavsky.github.io/motrack/reference/bounce_off_others.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for inter-object bouncing and recalculate directions — bounce_off_others","text":"moment Position tibble extra columns `direction` `speed` time_next Next timepoint settings list basic properties","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/bounce_off_others.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for inter-object bouncing and recalculate directions — bounce_off_others","text":"Like `moment`, directions adjusted (reversed, swapped), collision next time point (`timestep`)","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/bounce_off_square.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for square-arena bouncing and recalculate directions — bounce_off_square","title":"Check for square-arena bouncing and recalculate directions — bounce_off_square","text":"Check square-arena bouncing recalculate directions","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/bounce_off_square.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for square-arena bouncing and recalculate directions — bounce_off_square","text":"","code":"bounce_off_square(moment, time_next, settings)"},{"path":"https://jirilukavsky.github.io/motrack/reference/bounce_off_square.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for square-arena bouncing and recalculate directions — bounce_off_square","text":"moment Position tibble extra columns `direction` `speed` time_next Next timepoint settings list basic properties","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/bounce_off_square.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for square-arena bouncing and recalculate directions — bounce_off_square","text":"Like `moment`, directions adjusted (reversed, swapped), collision arena border next time point (`timestep`)","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/bounce_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate collsion vectors for two objects — bounce_pair","title":"Calculate collsion vectors for two objects — bounce_pair","text":"Calculate collsion vectors two objects","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/bounce_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate collsion vectors for two objects — bounce_pair","text":"","code":"bounce_pair(v1, v2, x1, x2)"},{"path":"https://jirilukavsky.github.io/motrack/reference/bounce_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate collsion vectors for two objects — bounce_pair","text":"v1 Velocity vector object 1. Two-dimensional numeric vector. v2 Velocity vector object 2. Two-dimensional numeric vector. x1 Center object 1 time collision. Two-dimensional numeric vector. x2 Center object 1 time collision. Two-dimensional numeric vector.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/bounce_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate collsion vectors for two objects — bounce_pair","text":"list two two-dimension vectors - new speed object 1 2","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/bounce_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate collsion vectors for two objects — bounce_pair","text":"","code":"# direct collision, speeds swap bounce_pair(c(0, 1), c(0, -1), c(0, 0), c(0, 1)) #> [[1]] #> [1]  0 -1 #>  #> [[2]] #> [1] 0 1 #>   # 45deg contact angle, makes 90deg turns bounce_pair(c(0, 1), c(0, -1), c(0, 0), c(1, 1)) #> [[1]] #> [1] -1  0 #>  #> [[2]] #> [1] 1 0 #>  bounce_pair(c(0, 1), c(0, -1), c(0, 1), c(1, 0)) #> [[1]] #> [1] 1 0 #>  #> [[2]] #> [1] -1  0 #>   # distance is not relevant, direct or 45 deg contact bounce_pair(c(0, 1), c(0, -1), c(0, 0), c(0, 2)) #> [[1]] #> [1]  0 -1 #>  #> [[2]] #> [1] 0 1 #>  bounce_pair(c(0, 1), c(0, -1), c(0, 0), c(2, 2)) #> [[1]] #> [1] -1  0 #>  #> [[2]] #> [1] 1 0 #>   # Works also for different velocities bounce_pair(c(0, 1), c(0, -2), c(0, 0), c(0, 1)) #> [[1]] #> [1]  0 -2 #>  #> [[2]] #> [1] 0 1 #>  bounce_pair(c(0, 1), c(0, -2), c(0, 0), c(1, 1)) #> [[1]] #> [1] -1.5 -0.5 #>  #> [[2]] #> [1]  1.5 -0.5 #>"},{"path":"https://jirilukavsky.github.io/motrack/reference/cur_speed.html","id":null,"dir":"Reference","previous_headings":"","what":"Get current speed — cur_speed","title":"Get current speed — cur_speed","text":"speeds constant, returns `speed` column `moment`. speeds functions, evaluates speed functions returns results.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/cur_speed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get current speed — cur_speed","text":"","code":"cur_speed(moment, cur_time = NULL)"},{"path":"https://jirilukavsky.github.io/motrack/reference/cur_speed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get current speed — cur_speed","text":"moment Position tibble extra columns `direction` `speed` cur_time Current time Speeds can defined functions thus possible make trajectories speeds sensitive time (harmonic movements accelerations) location (slower speeds center). single speed function, speeds evaluated one call. one speed function, speeds evaluated individually, one object time. Speed functions follow template `function(time, moment)` return vector speeds. written handle vector calculations (moment tibble multiple rows) individual values (moment one-row-tibble). Speed functions introduced via `settings$speed` added directly `speed` column initial position tibble. passing functions encapsulated list (`settings$speed <- c(my_fun)`).","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/cur_speed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get current speed — cur_speed","text":"numerical vector speed","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/cur_speed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get current speed — cur_speed","text":"","code":"f2 <- function(time, moment) {   5 + cos(time) + (moment$object %% 2) * 2 } sett_move <-   new_settings(     speed = c(f2), xlim = c(-9, 9), ylim = c(-9, 9),     bounce_off_square = FALSE,     bounce_off_circle = TRUE, circle_bounce_jitter = pi / 6   ) moment <- position8c %>% add_random_direction() tt <- make_random_trajectory(    moment, seq(0, 8, by = 0.1), sett_move, step_direct )"},{"path":"https://jirilukavsky.github.io/motrack/reference/default_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Default settings for position/trajectory code — default_settings","title":"Default settings for position/trajectory code — default_settings","text":"Returns list values used position/trajectory generation presentation. values refer \"physical properties\" (e.g., definition objects arena) presentation propoerties (e.g., objects' colour, presence border). list passed parameter functions.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/default_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default settings for position/trajectory code — default_settings","text":"","code":"default_settings()"},{"path":"https://jirilukavsky.github.io/motrack/reference/default_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default settings for position/trajectory code — default_settings","text":"list parameters","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/default_settings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Default settings for position/trajectory code — default_settings","text":"Currently used properties include: xlim vector form `c(xmin, xmax)`.   Represents x-limit arena square, objects limited area. ylim vector form `c(ymin, ymax)`.   Represents y-limit arena square, objects limited area. min_distance Minimum pairwise distance centres objects. r Radius object. Object considered circle. arena_border Logical. Whether arena border drawn. arena_shape Character. \"square\" \"circle\" fill_object Character. Colour code default fill colour. fill_target Character. Colour code target fill colour. border_object Character. Colour code default border. border_target Character. Colour code target border. show_labels Logical. show object numbers plots? bounce_off_square Logical. objects bounce square arena? bounce_off_others Logical. objects bounce ? simplified_bouncing Logical.     pairwise collisions respect contact angle     just swap velocity vectors (simplified bouncing)? bounce_off_circle Logical. objects bounce circular arena? bounce_off_inside Logical. objects bounce inside circular arena (donut shapes)? circle_bounce_jitter Real. Amount uniform angular jitter bouncing, radians.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/default_settings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default settings for position/trajectory code — default_settings","text":"","code":"default_settings() #> $xlim #> [1] -10  10 #>  #> $ylim #> [1] -10  10 #>  #> $min_distance #> [1] 1 #>  #> $r #> [1] 0.5 #>  #> $arena_border #> [1] TRUE #>  #> $arena_shape #> [1] \"square\" #>  #> $fill_object #> [1] \"gray\" #>  #> $fill_target #> [1] \"green\" #>  #> $border_object #> [1] \"black\" #>  #> $border_target #> [1] \"black\" #>  #> $show_labels #> [1] FALSE #>  #> $bounce_off_square #> [1] FALSE #>  #> $bounce_off_others #> [1] TRUE #>  #> $bounce_off_inside #> [1] FALSE #>  #> $simplified_bouncing #> [1] FALSE #>  #> $bounce_off_circle #> [1] FALSE #>  #> $circle_bounce_jitter #> [1] 0 #>"},{"path":"https://jirilukavsky.github.io/motrack/reference/extrapolate_moment.html","id":null,"dir":"Reference","previous_headings":"","what":"Extrapolates object positions based on current state and time — extrapolate_moment","title":"Extrapolates object positions based on current state and time — extrapolate_moment","text":"Intended use custom step functions.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/extrapolate_moment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extrapolates object positions based on current state and time — extrapolate_moment","text":"","code":"extrapolate_moment(moment, timestep, cur_time, new_time = NULL)"},{"path":"https://jirilukavsky.github.io/motrack/reference/extrapolate_moment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extrapolates object positions based on current state and time — extrapolate_moment","text":"moment Position tibble extra columns `direction` `speed` timestep far future objects move (linearly) cur_time Current time, time-sensitive speed functions (e.g., accelerations) new_time New time value returned object. omitted, calculated automatically `cur_time + timestep`","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/extrapolate_moment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extrapolates object positions based on current state and time — extrapolate_moment","text":"Another moment - position tibble extra columns `direction` `speed` corresponding time_next","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/extrapolate_moment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extrapolates object positions based on current state and time — extrapolate_moment","text":"","code":"moment <- position8c %>% add_random_direction() %>%   dplyr::mutate(speed = 3) extrapolate_moment(moment, 0.1, 0) #> # A tibble: 8 × 6 #>   object      x      y direction speed  time #>    <int>  <dbl>  <dbl>     <dbl> <dbl> <dbl> #> 1      1 -1.51  -1.81      3.05      3   0.1 #> 2      2 -4.02  -0.373     2.79      3   0.1 #> 3      3 -3.32   4.71      4.56      3   0.1 #> 4      4 -6.42  -0.516     1.79      3   0.1 #> 5      5  4.48  -5.23      0.228     3   0.1 #> 6      6  0.557 -4.06      2.97      3   0.1 #> 7      7 -5.14   3.84      1.32      3   0.1 #> 8      8  5.72  -1.53      0.874     3   0.1"},{"path":"https://jirilukavsky.github.io/motrack/reference/generate_positions_random.html","id":null,"dir":"Reference","previous_headings":"","what":"Random object positions — generate_positions_random","title":"Random object positions — generate_positions_random","text":"function expects square arena defined `xlim` `ylim` settings. objects placed randomly (uniform distribution sampling) arena. `check_distance` `TRUE`, process repeated minimum pairwise distance met. `border_distance` specifies, whether objects keep initial distance arena borders. distance meant bouncing distance, helps put objects together beginning.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/generate_positions_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random object positions — generate_positions_random","text":"","code":"generate_positions_random(n, settings, check_distance = T, border_distance = 0)"},{"path":"https://jirilukavsky.github.io/motrack/reference/generate_positions_random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random object positions — generate_positions_random","text":"n Number objects settings Basic properties - namely `xlim`, `ylim`, possibly `min_distance` check_distance Logical. positions generated minimum pairwise distance `min_distance` met. border_distance Distance arena borders.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/generate_positions_random.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random object positions — generate_positions_random","text":"Tibble `object`, `x` `y` columns.","code":""},{"path":[]},{"path":"https://jirilukavsky.github.io/motrack/reference/generate_positions_random.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random object positions — generate_positions_random","text":"","code":"# sample positions with no other requirements pos <- generate_positions_random(8, default_settings()) # when starting positions should be further from borders pos <- generate_positions_random(8, default_settings(), border_distance = 3)"},{"path":"https://jirilukavsky.github.io/motrack/reference/is_distance_at_least.html","id":null,"dir":"Reference","previous_headings":"","what":"Tests inter-object distances — is_distance_at_least","title":"Tests inter-object distances — is_distance_at_least","text":"function calculated pairwise distances checks larger equal.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/is_distance_at_least.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tests inter-object distances — is_distance_at_least","text":"","code":"is_distance_at_least(position, min_distance)"},{"path":"https://jirilukavsky.github.io/motrack/reference/is_distance_at_least.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tests inter-object distances — is_distance_at_least","text":"position tibble min_distance Minimum distance present pair","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/is_distance_at_least.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tests inter-object distances — is_distance_at_least","text":"TRUE distances larger `min_distance`","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/is_distance_at_least.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tests inter-object distances — is_distance_at_least","text":"","code":"example_pos <-   tibble::tibble(object = 1:8, x = 1:8, y = 4 - (1:8)) is_distance_at_least(example_pos, 1) #> [1] TRUE is_distance_at_least(example_pos, 2) #> [1] FALSE"},{"path":"https://jirilukavsky.github.io/motrack/reference/is_valid_position.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the object a valid position — is_valid_position","title":"Is the object a valid position — is_valid_position","text":"function tests object (tibble) several requirements: columns `object`, `x` `y` present. `object` column contains unique values value missing `x` `y` `x` `y` numeric","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/is_valid_position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the object a valid position — is_valid_position","text":"","code":"is_valid_position(position)"},{"path":"https://jirilukavsky.github.io/motrack/reference/is_valid_position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the object a valid position — is_valid_position","text":"position tibble","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/is_valid_position.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is the object a valid position — is_valid_position","text":"TRUE conditions met, FALSE otherwise","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/is_valid_position.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Is the object a valid position — is_valid_position","text":"restriction data type `object` placed.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/is_valid_position.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is the object a valid position — is_valid_position","text":"","code":"example_pos <-   tibble::tibble(object = 1:8, x = 1:8, y = 4 - (1:8)) is_valid_position(example_pos) #> [1] TRUE"},{"path":"https://jirilukavsky.github.io/motrack/reference/is_valid_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the object a valid trajectory — is_valid_trajectory","title":"Is the object a valid trajectory — is_valid_trajectory","text":"function tests object (tibble) several requirements: columns `time`, `object`, `x` `y` present. `object` column contains unique values value missing `x` `y` `x` `y` numeric","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/is_valid_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the object a valid trajectory — is_valid_trajectory","text":"","code":"is_valid_trajectory(trajectory)"},{"path":"https://jirilukavsky.github.io/motrack/reference/is_valid_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the object a valid trajectory — is_valid_trajectory","text":"trajectory tibble","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/is_valid_trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is the object a valid trajectory — is_valid_trajectory","text":"TRUE conditions met, FALSE otherwise","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/is_valid_trajectory.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Is the object a valid trajectory — is_valid_trajectory","text":"restriction data type `object` placed.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/is_valid_trajectory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is the object a valid trajectory — is_valid_trajectory","text":"","code":"example_pos <-   tibble::tibble(object = 1:8, x = 1:8, y = 4 - (1:8)) is_valid_position(example_pos) #> [1] TRUE"},{"path":"https://jirilukavsky.github.io/motrack/reference/load_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Load trajectory from file — load_trajectory","title":"Load trajectory from file — load_trajectory","text":"Load trajectory file","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/load_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load trajectory from file — load_trajectory","text":"","code":"load_trajectory(filename, delim = \",\", ...)"},{"path":"https://jirilukavsky.github.io/motrack/reference/load_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load trajectory from file — load_trajectory","text":"filename Name input file (e.g., .csv) delim Single character used separate fields within record. Default `\",\"` ... Parameters passed `readr::read_delim`","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/load_trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load trajectory from file — load_trajectory","text":"Tibble trajectory object loaded data","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/make_random_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Create random trajectory — make_random_trajectory","title":"Create random trajectory — make_random_trajectory","text":"Create random trajectory","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/make_random_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create random trajectory — make_random_trajectory","text":"","code":"make_random_trajectory(start, timescale, settings, step_function, ...)"},{"path":"https://jirilukavsky.github.io/motrack/reference/make_random_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create random trajectory — make_random_trajectory","text":"start Position tibble starting configuration timescale Numeric vector time points trajectory settings list basic properties step_function function called every time step calculate next position sequence ... Extra parameters passed `step_function`","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/make_random_trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create random trajectory — make_random_trajectory","text":"Tibble trajectory object","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/make_random_trajectory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create random trajectory — make_random_trajectory","text":"","code":"sett_move <-   new_settings(     speed = 5, xlim = c(-9, 9), ylim = c(-9, 9),     bounce_off_square = FALSE,     bounce_off_circle = TRUE, circle_bounce_jitter = pi / 6   ) moment <- position8c %>% add_random_direction() tt <- make_random_trajectory(   moment, seq(0, 8, by = 0.1), sett_move, step_direct )"},{"path":"https://jirilukavsky.github.io/motrack/reference/motrack.html","id":null,"dir":"Reference","previous_headings":"","what":"motrack package — motrack","title":"motrack package — motrack","text":"Multiple Object Tracking utilities","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/new_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a custom copy of settings — new_settings","title":"Creates a custom copy of settings — new_settings","text":"Creates custom copy settings","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/new_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a custom copy of settings — new_settings","text":"","code":"new_settings(.from = NULL, ...)"},{"path":"https://jirilukavsky.github.io/motrack/reference/new_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a custom copy of settings — new_settings","text":".optional parent defaults inherited ... named list properties override default settings.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/new_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a custom copy of settings — new_settings","text":"Updated list settings","code":""},{"path":[]},{"path":"https://jirilukavsky.github.io/motrack/reference/new_settings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a custom copy of settings — new_settings","text":"","code":"s1 <- new_settings(xlim = c(0, 10), ylim = c(0, 10)) s2 <- new_settings(.from = s1, show_labels = TRUE)"},{"path":"https://jirilukavsky.github.io/motrack/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://jirilukavsky.github.io/motrack/reference/plot_position.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot object positions — plot_position","title":"Plot object positions — plot_position","text":"function plots position tibble based x, y values potentially extra values settings. Position expected position tibble, may contain extra columns graphics: target (Logical vector indicating whether object target distractor), fill (Character vector colour names object interiors.), border (Character vector colour names object borders.).","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/plot_position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot object positions — plot_position","text":"","code":"plot_position(   position,   settings = default_settings(),   targets = NULL,   background_annotation = NULL,   foreground_annotation = NULL )"},{"path":"https://jirilukavsky.github.io/motrack/reference/plot_position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot object positions — plot_position","text":"position tibble settings list basic properties targets objects treated targets background_annotation Annotation rendered behind objects (texture) foreground_annotation Annotation rendered objects (aperture)","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/plot_position.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot object positions — plot_position","text":"ggplot2 figure","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/plot_position.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot object positions — plot_position","text":"","code":"# sample positions with no other requirements set.seed(100) pos <- generate_positions_random(8, default_settings()) plot_position(pos, default_settings())  # first four objects are targets plot_position(pos, default_settings(), 1:4)  pos$fill <- rainbow(8) plot_position(pos, default_settings())"},{"path":"https://jirilukavsky.github.io/motrack/reference/plot_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot object trajectories — plot_trajectory","title":"Plot object trajectories — plot_trajectory","text":"function plots trajectory tibble based x, y, time values potentially extra values settings. trajectory expected trajectory tibble, may contain extra columns graphics (plot_position): target (Logical vector indicating whether object target distractor), fill (Character vector colour names object interiors.), border (Character vector colour names object borders.).","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/plot_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot object trajectories — plot_trajectory","text":"","code":"plot_trajectory(trajectory, settings = default_settings(), targets = NULL, ...)"},{"path":"https://jirilukavsky.github.io/motrack/reference/plot_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot object trajectories — plot_trajectory","text":"trajectory tibble settings list basic properties targets objects treated targets ... Parameters passed `plot_position`","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/plot_trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot object trajectories — plot_trajectory","text":"ggplot2 figure","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/plot_trajectory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot object trajectories — plot_trajectory","text":"","code":"plot_trajectory(trajectory8c, default_settings())   # first four objects are targets plot_trajectory(trajectory8c, default_settings(), 1:4)"},{"path":"https://jirilukavsky.github.io/motrack/reference/position8c.html","id":null,"dir":"Reference","previous_headings":"","what":"Example position — position8c","title":"Example position — position8c","text":"Eight objects circular arena (radius = 10).","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/position8c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example position — position8c","text":"","code":"position8c"},{"path":"https://jirilukavsky.github.io/motrack/reference/position8c.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example position — position8c","text":"tibble 8 rows 3 variables: object Identifier object, 1 8 x x-coordinate, deg y y-coordinate, deg","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/position8c.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example position — position8c","text":"Generated script","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/render_trajectory_video.html","id":null,"dir":"Reference","previous_headings":"","what":"Render video from trajectory — render_trajectory_video","title":"Render video from trajectory — render_trajectory_video","text":"function repeatedly calls plot_position function generate preview trajectory motion. Extra time added motion sequence (2 seconds ).","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/render_trajectory_video.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render video from trajectory — render_trajectory_video","text":"","code":"render_trajectory_video(   filename,   trajectory,   settings = default_settings(),   targets = NULL,   outdir = getwd(),   ... )"},{"path":"https://jirilukavsky.github.io/motrack/reference/render_trajectory_video.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render video from trajectory — render_trajectory_video","text":"filename file name output video (e.g. \"trajectory.mp4\") trajectory tibble trajectory data settings list basic properties targets objects treated targets outdir output directory video saved ... Parameters passed `plot_position`","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/render_trajectory_video.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render video from trajectory — render_trajectory_video","text":"return value","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/render_trajectory_video.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render video from trajectory — render_trajectory_video","text":"","code":"if (FALSE) { # this example can take 30 seconds to run # set ffmpeg in necessary # ani.options(ffmpeg = \"/PATH/TO/ffmpeg/ffmpeg\") render_trajectory_video(\"trajectory.mp4\", trajectory8c,   new_settings(show_labels = TRUE),   targets = 1:4 ) }"},{"path":"https://jirilukavsky.github.io/motrack/reference/save_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Save trajectory to file — save_trajectory","title":"Save trajectory to file — save_trajectory","text":"Save trajectory file","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/save_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save trajectory to file — save_trajectory","text":"","code":"save_trajectory(trajectory, filename, delim = \",\")"},{"path":"https://jirilukavsky.github.io/motrack/reference/save_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save trajectory to file — save_trajectory","text":"trajectory Trajectory object exported file filename Name output file (e.g., .csv) delim Single character used separate fields within record. Default `\",\"`","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/save_trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save trajectory to file — save_trajectory","text":"Invisibly returns data wide format (saved file)","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/save_trajectory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save trajectory to file — save_trajectory","text":"","code":"filename <- \"test.csv\" save_trajectory(trajectory8c, filename) unlink(filename)"},{"path":"https://jirilukavsky.github.io/motrack/reference/simplify_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify trajectory — simplify_trajectory","title":"Simplify trajectory — simplify_trajectory","text":"save space can simplify trajectory data. Trajectories usually fine timeline, small time steps allows (1) minimize potential collision artifacts, (2) allow smooth directional changes like `step_vonmises`. simplifying, go time points detect timepoints can interpolate object positions. keep positions remove rest. resulting trajectory irregular timeline. `snapshot`, timepoint positions objects included (.e., also positions , interpolated given timepoint). `snapshot == FALSE`, data changing points included.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/simplify_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify trajectory — simplify_trajectory","text":"","code":"simplify_trajectory(trajectory, snapshot = T, eps = 1e-04)"},{"path":"https://jirilukavsky.github.io/motrack/reference/simplify_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify trajectory — simplify_trajectory","text":"trajectory Trajectory data snapshot Logical, timepoint include data point. eps Direction changes smaller `eps` (radians) ignored","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/simplify_trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify trajectory — simplify_trajectory","text":"Subset original data. timeline irregular, positions interpolated omitted.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/simplify_trajectory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify trajectory — simplify_trajectory","text":"","code":"library(ggplot2) sett_move <- new_settings(   speed = 5, xlim = c(-9, 9), ylim = c(-9, 9),   bounce_off_square = FALSE,   bounce_off_circle = TRUE, circle_bounce_jitter = pi / 6 ) moment <- position8c %>% add_random_direction() tt1 <- make_random_trajectory(   moment, seq(0, 8, by = 0.1), sett_move, step_direct) tt2 <- simplify_trajectory(tt1, snapshot = TRUE) tt3 <- simplify_trajectory(tt1, snapshot = FALSE) ggplot(tt1, aes(x = x, y = y, group = object)) +   geom_path() +   geom_point(data = tt2)  # number of lines reduced down to: nrow(tt2) / nrow(tt1) #> [1] 0.3333333 nrow(tt3) / nrow(tt1) #> [1] 0.08024691"},{"path":"https://jirilukavsky.github.io/motrack/reference/step_direct.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple trajectory step function — step_direct","title":"Simple trajectory step function — step_direct","text":"Simple trajectory step function","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/step_direct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple trajectory step function — step_direct","text":"","code":"step_direct(moment, time_next, settings)"},{"path":"https://jirilukavsky.github.io/motrack/reference/step_direct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple trajectory step function — step_direct","text":"moment Position tibble extra columns `direction` `speed` time_next Next time step predict settings list basic properties","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/step_direct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple trajectory step function — step_direct","text":"Another moment - position tibble extra columns `direction` `speed` corresponding time_next","code":""},{"path":[]},{"path":"https://jirilukavsky.github.io/motrack/reference/step_vonmises.html","id":null,"dir":"Reference","previous_headings":"","what":"Von Mises trajectory step function — step_vonmises","title":"Von Mises trajectory step function — step_vonmises","text":"Von Mises trajectory step function","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/step_vonmises.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Von Mises trajectory step function — step_vonmises","text":"","code":"step_vonmises(moment, time_next, settings, kappa)"},{"path":"https://jirilukavsky.github.io/motrack/reference/step_vonmises.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Von Mises trajectory step function — step_vonmises","text":"moment Position tibble extra columns `direction` `speed` time_next Next time step predict settings list basic properties kappa concentration parameter","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/step_vonmises.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Von Mises trajectory step function — step_vonmises","text":"Another moment - position tibble extra columns `direction` `speed` corresponding time_next","code":""},{"path":[]},{"path":"https://jirilukavsky.github.io/motrack/reference/step_waitandmove.html","id":null,"dir":"Reference","previous_headings":"","what":"Wait and move step function — step_waitandmove","title":"Wait and move step function — step_waitandmove","text":"Step function wait--move movement pattern","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/step_waitandmove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wait and move step function — step_waitandmove","text":"","code":"step_waitandmove(   moment,   time_next,   settings,   move_time = c(0.5, 1.5),   wait_time = c(0.2, 0.5),   wait_prob = 0.1,   syncstart = F )"},{"path":"https://jirilukavsky.github.io/motrack/reference/step_waitandmove.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wait and move step function — step_waitandmove","text":"moment Position tibble extra columns `direction` `speed` time_next Next time step predict settings List basic properties move_time Range move phase duration wait_time Range wait phase duration wait_prob Probability waiting syncstart Logical, time--change synchronized generated first time","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/step_waitandmove.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wait and move step function — step_waitandmove","text":"Another moment - position tibble extra columns `direction`, `speed`, `speed_scale`, `ttc` `mov_state`","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/step_waitandmove.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wait and move step function — step_waitandmove","text":"Using step function, objects changes two states - moving waiting. state, new state sampled given proabability. probability waiting set zero, objects move way  step_zigzag step function","code":""},{"path":[]},{"path":"https://jirilukavsky.github.io/motrack/reference/step_zigzag.html","id":null,"dir":"Reference","previous_headings":"","what":"Zigzag trajectory step function — step_zigzag","title":"Zigzag trajectory step function — step_zigzag","text":"Zigzag trajectory step function","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/step_zigzag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zigzag trajectory step function — step_zigzag","text":"","code":"step_zigzag(moment, time_next, settings, ttt = c(0.5, 1.5), syncstart = F)"},{"path":"https://jirilukavsky.github.io/motrack/reference/step_zigzag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zigzag trajectory step function — step_zigzag","text":"moment Position tibble extra columns `direction` `speed` time_next Next time step predict settings list basic properties ttt Time--turn - time object pick new direction syncstart Logical, time--turn synchronized generated first time","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/step_zigzag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zigzag trajectory step function — step_zigzag","text":"Another moment - position tibble extra columns `direction`, `speed` `ttt` corresponding time_next","code":""},{"path":[]},{"path":"https://jirilukavsky.github.io/motrack/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"sym() creates symbol string syms() creates list symbols character vector. expr() quo() quote one expression. quo() wraps quoted expression quosure. plural variants rlang::exprs() quos() return list quoted expressions quosures. enexpr() enquo() capture expression supplied argument user current function (enquo() wraps expression quosure). enexprs() enquos() capture multiple expressions supplied arguments, including .... exprs() exported avoid conflicts Biobase::exprs(), therefore one always use rlang::exprs(). learn tidy eval use tools, visit http://rlang.r-lib.org Metaprogramming section Advanced R.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/trajectory8c.html","id":null,"dir":"Reference","previous_headings":"","what":"Example trajectory — trajectory8c","title":"Example trajectory — trajectory8c","text":"Eight objects circular arena (radius = 10, speed = 5, 8 seconds).","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/trajectory8c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example trajectory — trajectory8c","text":"","code":"trajectory8c"},{"path":"https://jirilukavsky.github.io/motrack/reference/trajectory8c.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example trajectory — trajectory8c","text":"tibble 648 rows 7 variables: time Time position, 0 8 0.1 steps object Identifier object, 1 8 x x-coordinate, deg y y-coordinate, deg direction Current direction, rad speed Object speed, deg/s time1 ?","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/trajectory8c.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example trajectory — trajectory8c","text":"Generated script","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/validate_object_direction_change.html","id":null,"dir":"Reference","previous_headings":"","what":"Check direction changes for single object trajectory — validate_object_direction_change","title":"Check direction changes for single object trajectory — validate_object_direction_change","text":"Check direction changes single object trajectory","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/validate_object_direction_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check direction changes for single object trajectory — validate_object_direction_change","text":"","code":"validate_object_direction_change(   trajectory1,   change_angle = 30,   min_interval = 0.2 )"},{"path":"https://jirilukavsky.github.io/motrack/reference/validate_object_direction_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check direction changes for single object trajectory — validate_object_direction_change","text":"trajectory1 Trajectory featuring one object change_angle Angle value degrees. Direction changes beyond value considered large. min_interval Time seconds, pass large direction changes.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/validate_object_direction_change.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check direction changes for single object trajectory — validate_object_direction_change","text":"Logical. `TRUE` pair consecutive bounces separated least `min_interval` seconds.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/validate_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanity check for trajectory — validate_trajectory","title":"Sanity check for trajectory — validate_trajectory","text":"Sometimes, want extra requirements trajectories. idea automated check possible errors artifacts appear trajectory data.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/validate_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanity check for trajectory — validate_trajectory","text":"","code":"validate_trajectory(   trajectory,   change_angle = 30,   min_interval = 0.2,   min_distance = 1,   verbose = F )"},{"path":"https://jirilukavsky.github.io/motrack/reference/validate_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanity check for trajectory — validate_trajectory","text":"trajectory Tibble object trajectory change_angle Angle value degrees. Direction changes beyond value considered large. min_interval Time seconds, pass large direction changes. min_distance Minimum inter-object spacing, complied every frame. verbose `TRUE`, results subtest printed console. Default `FALSE`.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/validate_trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanity check for trajectory — validate_trajectory","text":"Logical. `TRUE` conditions passed.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/validate_trajectory.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sanity check for trajectory — validate_trajectory","text":"test following conditions: *Sudden motion changes* - Sometimes objects bounce frequently,   may attract attention. object, test minimal   time interval two consecutive large direction changes. *Minimum interobject distance* - minimum distance checked   generating positions also step generating trajectories.   , make final check minimum distance complied.","code":""},{"path":"https://jirilukavsky.github.io/motrack/reference/validate_trajectory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sanity check for trajectory — validate_trajectory","text":"","code":"validate_trajectory(trajectory8c) #> [1] FALSE"},{"path":[]},{"path":"https://jirilukavsky.github.io/motrack/news/index.html","id":"motrack-020","dir":"Changelog","previous_headings":"","what":"motrack 0.2.0","title":"motrack 0.2.0","text":"Added trajectory simplification. can generate trajectory 100 frames per second later remove datapoints, can interpolated. Updated versioning. now, start use minor/patch numbering.","code":""},{"path":"https://jirilukavsky.github.io/motrack/news/index.html","id":"motrack-0109000","dir":"Changelog","previous_headings":"","what":"motrack 0.1.0.9000","title":"motrack 0.1.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
